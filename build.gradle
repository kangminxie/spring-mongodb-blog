plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'checkstyle'
	id 'com.github.node-gradle.node' version '2.2.3'
}

group = 'com.kangmin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
	implementation group: 'org.mongodb', name: 'mongo-java-driver', version: '3.12.10'

	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.1'

	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-guava
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version: '2.12.3'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jdk8
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.13.0'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.0'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-csv
	implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.12.3'

	// https://mvnrepository.com/artifact/javax.validation/validation-api
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

	// https://mvnrepository.com/artifact/org.yaml/snakeyaml
	implementation group: 'org.yaml', name: 'snakeyaml', version: '1.29'
}

test {
	useJUnitPlatform()
}

// https://blog.indrek.io/articles/serving-react-apps-from-spring-boot/
task appNpmInstall(type: NpmTask) {
	description = "Installs all dependencies from package.json"
	workingDir = file("${project.projectDir}/src/main/frontend")
	args = ["install"]
}

task appNpmBuild(type: NpmTask) {
	description = "Builds production version of the frontend webapp"
	workingDir = file("${project.projectDir}/src/main/frontend")
	args = ["run", "build"]
}

task copyFrontend(type: Copy) {
	from 'src/main/frontend/build'
	into 'build/resources/main/static/.'
}

appNpmBuild.dependsOn appNpmInstall
copyFrontend.dependsOn appNpmBuild
// compileJava.dependsOn copyFrontend

node {
	version = '13.8.0'
	npmVersion = '6.14.8'
	download = true

	// Set the work directory for unpacking node
	workDir = file("${project.buildDir}/nodejs")

	// Set the work directory for NPM
	npmWorkDir = file("${project.buildDir}/npm")
}

task checkstyle(type: Checkstyle) {
	configFile file("${project.projectDir}/config/checkstyle/checkstyle.xml")
	configProperties.checkstyleSuppressionsPath = file("${project.projectDir}/config/checkstyle/suppressions.xml").absolutePath
}

checkstyleMain {
	source ='src/main/java'
}

checkstyleTest {
	source ='src/test/java'
}
